@model SportsStore.WebUI.Models.ProductsListViewModel

@{

    ViewBag.Title = "Products";
    int counter = 0;
}

@*Displays each item - Product summary is partial view for each product tile*@
<div id="ProductList">
    <div class="container">
        <div class="row">
            @foreach (var p in Model.Products)
            {
                if (counter != 0 && counter % 4 == 0)
                {
                @:</div>
                <br />
                @:<div class="row">
                }
                <div class="col-sm-3">
                    <div class="panel panel-primary">
                        <div class="panel-body"><img src="@Url.Action("GetImage", "Product", new { p.ProductID })" class="img-responsive" style="width:100%" alt="Image"></div>
                        <div class="panel-footer">
                            <strong>@p.Name</strong>
                            <span class="pull-right label label-primary">@p.Price.ToString("c")</span>
                            @using (Html.BeginForm("AddToCart", "Cart"))
                            {
                                <div class="pull-right">
                                    @Html.Hidden("productId", p.ProductID)
                                    @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                                    <input type="submit" class="btn btn-success" value="Add to cart" />
                                </div>
                            }
                        </div>
                    </div>
                </div>
                counter++;
            }
        </div>
    </div>

    @*@foreach (var p in Model.Products)
        {
            @Html.Partial("ProductSummary",p)
        }*@




    @*Pagination*@
    @if (ViewBag.ActionName == "Search")
    {
        <div class="btn-group pull-right">
            @Html.PageLinks(Model.PagingInfo, x => Url.Action("SearchBox","Product", new { page = x, category = Model.CurrentCategory }))
        </div>
    }
    else
    {
        <div class="btn-group pull-right">
            @Html.PageLinks(Model.PagingInfo, x => Url.Action("List", new { page = x, category = Model.CurrentCategory }))
        </div>
    }
</div>


